name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ------------------------------------------------------------------
      # IMPORTANT: Add and customize your project's build step here.
      # The example below is for a typical Node.js project.
      # If your 'build' folder is already committed and up-to-date in
      # your repository, you might not need this build step.
      # ------------------------------------------------------------------
      - name: Setup Node.js # Optional: if your build process needs Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Specify your Node.js version

      - name: Build project # If your 'build' folder is generated
        run: |
          echo "Starting build process..."
          # Replace these with your project's actual build commands:
          # e.g., if you use npm:
          npm install
          npm run build # This command should generate the './build' folder
          # e.g., if you use yarn:
          # yarn install
          # yarn build
          # e.g., if you use Jekyll:
          # bundle install
          # bundle exec jekyll build --destination ./build
          # e.g., if you use Hugo:
          # hugo --destination ./build
          echo "Build process finished."

      # This step helps you debug by showing what's in the build directory.
      - name: List build directory contents
        run: |
          echo "Contents of ./build directory:"
          ls -R ./build || echo "./build directory not found or empty."

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload contents of 'build' directory
          path: './build'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
